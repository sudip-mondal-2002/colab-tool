generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String          @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String          @unique
  passwordHash String
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  workspaces   WorkspaceUser[]
  tasks        Task[]
}

model Workspace {
  id          String          @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  tasks       Task[]
  users       WorkspaceUser[]
  files       File[]
}

enum Role {
  USER
  ADMIN
  OWNER
}

model WorkspaceUser {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String    @db.ObjectId
  user        User      @relation(fields: [userId], references: [id])
  userId      String    @db.ObjectId
  role        Role      @default(USER)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
}

model Task {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  workspace   Workspace    @relation(fields: [workspaceId], references: [id])
  user        User         @relation(fields: [userId], references: [id])
  workspaceId String       @db.ObjectId
  userId      String       @db.ObjectId
  name        String
  status      TaskStatus
  priority    TaskPriority
  description String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model File {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  content     String
  workspaceId String    @db.ObjectId
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
